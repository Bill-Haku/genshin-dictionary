name: "actions"

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
  push:
    branches:
      - main

jobs:
  test:
    timeout-minutes: 10
    env:
      NODE_ENV: local
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: cache playwright browsers
        id: playwright-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('**/package-lock.json') }}

      - run: npm ci
      - run: npx playwright install-deps
      - run: npm run build
      - run: npm test
      - run: npm run lint

  staging:
    if: ${{ github.ref != 'refs/heads/main' && github.repository_owner == 'xicri' }}
    timeout-minutes: 5
    env:
      NODE_ENV: staging
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: generate fly-staging.toml
        run: |
          cp fly.toml fly-staging.toml
          sed -i -e 's/"genshin-dictionary"/"genshin-dictionary-staging"/' fly-staging.toml
      - run: flyctl deploy --remote-only --config=fly-staging.toml

  production:
    if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'xicri' }}
    needs: test
    timeout-minutes: 5
    env:
      NODE_ENV: production
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
